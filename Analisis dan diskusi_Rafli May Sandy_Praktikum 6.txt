Analisis:
Dalam percobaan pada minggu ke-6 ini, saya melakukan percobaan mendeteksi jalur rel kereta (Lane Detection) dengan menggunakan metode canny edge detection dan lane detection dengan instance segmentation. Dalam percobaan ini saya menggunakan Yolov8-seg yang digunakan sebagai instance segmentation dan juga beberapa library seperti numpy dll. Dalam proses pembuatan, program dibagi menjadi 3 program yang mana pada program pertama untuk mendeteksi tepi dengan menggunakan metode canny edge detection. Output dari program ini berupa gambar rel dengan area rel berawarna putih sedangkan area lainnya berwarna hitam, lalu pada program kedua mendeteksi tepi rel menggunakan lane detection dengan instance segmentation (Yolov8-seg). Output dari program ini berupa gambar dengan jalur rel yang diberi warna segmentation. Pada program yang ketiga merupakan gabungan dari metode canny edge detection dengan lane detection. Output dari program ini berupa gambar objek dengan bounding box dan label sera menunjukkan struktur tepi dari objek tersebut. Berdasarkan hasil dari percobaan ini dapat disimpulkan bahwa instance segmentation jauh lebih baik delem mendeteksi tepi rel dibandingkan dengan menggunakan canny edge detection namun instance segmentation membutuhkan lebih banyak daya komputasi. Tapi dengan menggabungkan kedua metode tersebut dapat meningkatkan akurasi dalam mendetksi jalur dan hasil yang terdeteksi akan lebih stabil. Selain itu dengan mengatur parameter canny (thresholds) dapat mempengaruhi tepi suatu objek yang dikenali dalam gambar. Semakin rendah nilai thresholds maka banyak noise dari tekstur rel atau bayangan ikut terdeteksi sebagai tepi, sedangkan jika nilai thresholds terlalu tinggi dapat mengakibatkan hanya bagian jalur yang sangat kontras yang akan terdeteksi sedangkan jalur rel yang pudar atau tertutup sebagian akan tidak muncul dalam hasil deteksi.
Diskusi:
1.	Pemilihan antara menggunakan canny edge detection dan instance segmentation tergantung pada kondisi gambar, tujuan deteksi, dan kebutuhan komputasi. Jika memerlukan deteksi cepat & ringan, hanya perlu mendeteksi struktur atau kontur dari sebuah objek, serta gambar memiliki kontras tinggi dan tidak terlalu kompleks sebaiknya mengunakan canny edge detection
2.	Agar Yolov8-seg dapat mendeteksi jalur dengan lebih akurat dapat melakukan tuning parameter baik saat pelatihan (training) maupun pada saat inferensi (prediksi). Tuning parameter pada saat pelatihan dapat dilakukan dengan cara menggunakan dataset yang beragam dan berkualitas, melakukan augmentasi data dan menyesuaikan hyperparameter agar model dapat lebih stabil. Jika sudah dalam tahap inferensi, tuning parameter dapat dilakukan dengan cara menyesuaikan nila confidence dan IoU threshold agar deteksi lbih presisi. Lalu bisa juga dengan menggunakan post-processsing seperti filter area atau penggabungan dengan canny edge agar hasil lebih baik.
3.	Metode canny edge detection dan yolov8-seg dapat diterapkan dalam sistem navigasi kereta otomatis dengan cara menetukan fungsi dalam sistem naigasi kereta, lalu membuat arsitektur sistem navigasi dengan deteksi jalur yang mana yolov8-seg digunakan untuk dteksi jalur sedangkan canny edge detection digunakan untuk mengekstraksi tepi dari jalur rel, sehngga output dari sistem ini yaitu menghasilkan jalur yang dapat diikuti oleh kereta otomatis sehingga sistem navigasi akan mengontrol pergerakan kereta.
